0.5.5
=====
- Added new setting ``DEFENDER_GET_USERNAME_FROM_REQUEST_PATH` for control how username is accessed from request [@andrewshkovskii]
- Added new argument ``get_username` for ``decorators.watch_login`` to propagate ``get_username`` argument to other utils functions calls done in ``watch_login`` [@andrewshkovskii]

0.5.4
=====
- Added 2 new setting variables for more granular failure limit control [@williamboman]
- Added ssl option when instantiating StrictRedis [@mjrimrie]
- Send signals when blocking username or ip [@williamboman]

0.5.3
=====
- Remove mockredis as install requirement, make only test requirement [@blueyed]

0.5.2
=====
- Fix regex in 'unblock_username_view' to handle special symbols [@ruthus18]
- Fix django requires version for 1.11.x [@kencochrane]
- remove hiredis dependency [@ericbuckley]
- Correctly get raw client when using django_redis cache. [@cburger]
- replace django.core.urlresolvers with django.urls For Django 2.0 [@s-wirth]
- add username kwarg for providing username directly rather than via callback arg [@williamboman]
- Only use the username if it is actually provided  [@cobusc]

0.5.1
=====
- Middleware fix for django >= 1.10 #93 [@Temeez]
- Force the username to lowercase #90 [@MattBlack85]

0.5.0
=====
- Better support for Django 1.11 [@dukebody]
- Added support to share redis config with django.core.cache [@Franr]
- Allow decoration of functions beyond the admin login [@MattBlack85]
- Doc improvements [@dukebody]
- Allow usernames with plus signs in unblock view [@dukebody]
- Code cleanup [@KenCochrane]

0.4.3
=====
- Flex version requirements for dependencies
- Better support for Django 1.10

0.4.2
=====
Better support for Django 1.9

0.4.1
=====
minor refactor to make it easier to retrieve username.

0.4.0
=====
added ``DEFENDER_DISABLE_IP_LOCKOUT`` and added support for Python 3.5

0.3.2
=====
added ``DEFENDER_LOCK_OUT_BY_IP_AND_USERNAME``, and changed settings to support
django 1.8.

0.3.1
=====
fixed the management command name

0.3
===

- Added management command ``cleanup_django_defender`` to clean up access
    attempt table.
- Added ``DEFENDER_STORE_ACCESS_ATTEMPTS`` config to say if you want to
    store attempts to DB or not.
- Added ``DEFENDER_ACCESS_ATTEMPT_EXPIRATION`` config to specify how long
    to store the access attempt records in the db, before the management command
    cleans them up.
- changed the Django admin page to remove some filters which were making the
    page load slow with lots of login attempts in the database.

0.2.2
=====
Another bug fix release for more missing files in distribution

0.2.1
=====
Bug fixes for packing missing files

0.2
===
Added fixes to include possible security issue

0.1
===
Initial Version
